openapi: 3.0.3
info:
  title: NASA Weather Data API
  description: |
    Weather data and prediction service using NASA POWER API, plus geomagnetic storm data and forecasts.
    
    This API provides historical weather data and future weather predictions based on NASA POWER satellite data.
    For past dates, it returns actual historical measurements. For future dates, it calculates predictions
    using arithmetic mean of historical data from the past 20 years (configurable).
    
    Additionally, the API provides geomagnetic storm data from NASA DONKI and forecasts from NOAA SWPC.
    
    ## Features
    - Historical weather data from NASA POWER API
    - Weather predictions based on historical averages
    - Geomagnetic storm data from NASA DONKI
    - 3-day and 27-day geomagnetic forecasts from NOAA SWPC
    - Multiple weather parameters support
    - Bulk data processing
    - CSV and JSON output formats
    - Comprehensive error handling
    
    ## Data Sources
    - **Weather Data**: NASA's POWER (Prediction Of Worldwide Energy Resources) API - satellite-derived meteorological data
    - **Geomagnetic Storms**: NASA DONKI (Space Weather Database Of Notifications, Knowledge, Information)
    - **Geomagnetic Forecasts**: NOAA Space Weather Prediction Center (SWPC)
  version: 1.0.0
  contact:
    name: NASA Space Apps Challenge Team
    email: support@weatherapi.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000/api
    description: Development server
  - url: https://nasa-weather-api.example.com/api
    description: Production server

tags:
  - name: Weather Data
    description: Weather data retrieval and prediction endpoints
  - name: Weather Parameters
    description: Available weather parameters information
  - name: Geomagnetic Data
    description: Geomagnetic storm data and forecasts from NASA DONKI and NOAA SWPC
  - name: Asteroids
    description: Near Earth Object asteroid data based on closest approach dates
  - name: Natural Events
    description: NASA EONET natural disaster event tracking and monitoring
  - name: Health
    description: API health and status endpoints

paths:
  /weather/data:
    get:
      summary: Get weather data for specific location and date
      description: |
        Returns historical weather data for past dates or predictions for future dates based on historical averages.
        
        **Historical Data**: For dates in the past, returns actual measured data from NASA POWER API.
        **Predictions**: For future dates, calculates predictions using arithmetic mean of historical data from the specified number of years.
      operationId: getWeatherData
      tags:
        - Weather Data
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
          example: 41.0
          description: Latitude coordinate in decimal degrees
        - name: longitude
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
          example: 29.0
          description: Longitude coordinate in decimal degrees
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
          example: "2025-10-30"
          description: Date in YYYY-MM-DD format (accepts flexible formats like 2025-1-1, 2025-10-3, or 2025-10-30)
        - name: parameters
          in: query
          required: false
          schema:
            type: string
            pattern: '^[A-Z0-9_]+(,[A-Z0-9_]+)*$'
          example: "T2M,RH2M,WS10M"
          description: Comma-separated list of weather parameters (defaults to T2M,RH2M,WS10M,WD10M,PS,ALLSKY_SFC_SW_DWN)
        - name: historicalYears
          in: query
          required: false
          schema:
            type: integer
            minimum: 5
            maximum: 30
            default: 20
          example: 20
          description: Number of historical years to use for future predictions
        - name: format
          in: query
          required: false
          schema:
            type: string
            enum: [json, csv]
            default: json
          example: "json"
          description: Response format
      responses:
        '200':
          description: Successfully retrieved weather data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherDataResponse'
            text/csv:
              schema:
                type: string
                description: CSV formatted weather data
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '502':
          description: External API error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '504':
          description: Request timeout
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /weather/parameters:
    get:
      summary: Get available weather parameters
      description: Returns list of available weather parameters with their descriptions, units, and usage information
      operationId: getWeatherParameters
      tags:
        - Weather Parameters
      responses:
        '200':
          description: Successfully retrieved parameter information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ParametersResponse'

  /weather/historical-range:
    get:
      summary: Get available data range for location
      description: Returns the available date range for historical and prediction data at given coordinates
      operationId: getHistoricalRange
      tags:
        - Weather Data
      parameters:
        - name: latitude
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
          description: Latitude coordinate in decimal degrees
        - name: longitude
          in: query
          required: true
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
          description: Longitude coordinate in decimal degrees
      responses:
        '200':
          description: Successfully retrieved date range information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateRangeResponse'
        '400':
          description: Invalid coordinates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /weather/bulk:
    post:
      summary: Process multiple weather data requests
      description: |
        Accepts multiple location-date combinations for batch processing.
        Maximum 10 requests per batch operation.
      operationId: getBulkWeatherData
      tags:
        - Weather Data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkRequest'
      responses:
        '200':
          description: Bulk request processed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
        '400':
          description: Invalid bulk request format
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /geomagnetic/storms:
    get:
      summary: Get geomagnetic storm data from NASA DONKI
      description: |
        Returns geomagnetic storm (GST) data from NASA's DONKI (Space Weather Database Of Notifications, Knowledge, Information) system.
        Includes Kp index values, linked space weather events, and storm notifications.
      operationId: getGeomagneticStorms
      tags:
        - Geomagnetic Data
      parameters:
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
          example: "2025-09-05"
          description: Start date for storm data range (YYYY-MM-DD). Defaults to 30 days ago.
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
          example: "2025-10-05"
          description: End date for storm data range (YYYY-MM-DD). Defaults to current date.
      responses:
        '200':
          description: Successfully retrieved geomagnetic storm data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeomagneticStormResponse'
        '400':
          description: Invalid date range
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid NASA API key
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: NASA DONKI service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /geomagnetic/forecast/3-day:
    get:
      summary: Get 3-day geomagnetic forecast from NOAA SWPC
      description: |
        Returns the 3-day geomagnetic activity forecast from NOAA Space Weather Prediction Center.
        Includes daily Kp index predictions and activity levels.
      operationId: get3DayForecast
      tags:
        - Geomagnetic Data
      responses:
        '200':
          description: Successfully retrieved 3-day forecast
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeDayForecastResponse'
        '503':
          description: NOAA SWPC service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /geomagnetic/forecast/27-day:
    get:
      summary: Get 27-day geomagnetic outlook from NOAA SWPC
      description: |
        Returns the 27-day geomagnetic activity outlook from NOAA Space Weather Prediction Center.
        Provides extended forecast for potential geomagnetic storms.
      operationId: get27DayOutlook
      tags:
        - Geomagnetic Data
      responses:
        '200':
          description: Successfully retrieved 27-day outlook
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwentySevenDayOutlookResponse'
        '503':
          description: NOAA SWPC service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /geomagnetic/forecast/combined:
    get:
      summary: Get combined geomagnetic forecasts (3-day + 27-day)
      description: |
        Returns both 3-day and 27-day geomagnetic forecasts in a single response.
        Useful for getting complete near-term and extended outlook data.
      operationId: getCombinedForecast
      tags:
        - Geomagnetic Data
      responses:
        '200':
          description: Successfully retrieved combined forecast data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedForecastResponse'
        '503':
          description: NOAA SWPC service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /asteroids/feed:
    get:
      summary: Get asteroids by closest approach date
      description: |
        Retrieve a list of Asteroids based on their closest approach date to Earth. 
        Returns detailed information about each asteroid including size estimates, velocity, 
        miss distance, and hazard classification.
        
        **Date Range**: Maximum 7 days between start_date and end_date. 
        If end_date is not provided, it defaults to 7 days after start_date.
      operationId: getAsteroidFeed
      tags:
        - Asteroids
      parameters:
        - name: start_date
          in: query
          required: true
          schema:
            type: string
            format: date
            pattern: '^\d{4}-\d{2}-\d{2}$'
            example: "2025-09-07"
          description: Starting date for asteroid search (YYYY-MM-DD format)
        - name: end_date
          in: query
          required: false
          schema:
            type: string
            format: date
            pattern: '^\d{4}-\d{2}-\d{2}$'
            example: "2025-09-08"
          description: Ending date for asteroid search (YYYY-MM-DD format). Defaults to 7 days after start_date. Maximum range is 7 days.
      responses:
        '200':
          description: Successfully retrieved asteroid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsteroidFeedResponse'
        '400':
          description: Invalid request parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AsteroidErrorResponse'
        '502':
          description: External API error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /eonet/categories:
    get:
      summary: Get all event categories
      description: Fetch all available natural event categories from NASA EONET. Lists all event categories (e.g., "wildfires", "severeStorms").
      operationId: getEonetCategories
      tags:
        - Natural Events
      responses:
        '200':
          description: Successfully retrieved event categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      source:
                        type: string
                        example: "NASA EONET API"
                      totalCategories:
                        type: integer
                        example: 13
                      categories:
                        type: array
                        items:
                          $ref: '#/components/schemas/EONETCategory'
                  requestTimestamp:
                    type: string
                    format: date-time
                    example: "2025-10-05T12:00:00Z"
                  processingTime:
                    type: integer
                    example: 145
                    description: Processing time in milliseconds

  /eonet/events:
    get:
      summary: Get natural disaster events
      description: |
        Quickly get a global snapshot of the most recent major events. Default returns "open" (ongoing) events. 
        
        **Use Case**: Dashboard initial load for "Current Natural Events" list.
        
        **Presentation Logic**: Card list (icon by category), last event timestamp + short magnitude label (e.g., "55 kts").
      operationId: getEonetEvents
      tags:
        - Natural Events
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [open, closed]
            default: open
          example: "open"
          description: Event status - "open" for ongoing events or "closed" for ended events
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 5
          description: Maximum number of events to return (default 20, max 100)
      responses:
        '200':
          description: Successfully retrieved natural disaster events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EONETEventsResponse'

  /eonet/events/geojson:
    get:
      summary: Get events in GeoJSON format
      description: |
        Provides the same event data in GeoJSON format for mapping libraries (Leaflet, Google Maps).
        
        **Use Case**: Direct integration with map visualization libraries.
      operationId: getEonetEventsGeoJSON
      tags:
        - Natural Events
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [open, closed]
            default: open
        - name: category
          in: query
          required: false
          schema:
            type: string
            enum: [drought, dustHaze, earthquakes, floods, landslides, manmade, seaLakeIce, severeStorms, snow, tempExtremes, volcanoes, waterColor, wildfires]
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved events in GeoJSON format
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  data:
                    type: object
                    description: GeoJSON FeatureCollection

  /eonet/events/category/{categoryId}:
    get:
      summary: Get category-specific events
      description: |
        Category-focused risk monitoring (e.g., fire smoke / air quality impact).
        
        **Use Case**: Input trigger for air quality or environmental alert module.
        
        **Presentation Logic**: In "Active Wildfires" section, show size (acres) + last update; if data is older than 48 hours, display a "stale data" tag.
      operationId: getEonetEventsByCategory
      tags:
        - Natural Events
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
            enum: [drought, dustHaze, earthquakes, floods, landslides, manmade, seaLakeIce, severeStorms, snow, tempExtremes, volcanoes, waterColor, wildfires]
          example: "wildfires"
          description: Category ID (e.g., "wildfires", "severeStorms")
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [open, closed]
            default: open
          description: Event status
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 3
          description: Maximum number of events to return
      responses:
        '200':
          description: Successfully retrieved category-specific events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EONETEventsResponse'
        '400':
          description: Invalid category ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EONETErrorResponse'

  /eonet/events/regional:
    get:
      summary: Get regional events with proximity analysis
      description: |
        Detect if there are any events near the user's active location (local risk awareness).
        
        **Use Case**: After user selects location; compute distance and classify "<50 km: High Risk", "50–150 km: Medium".
        
        **Presentation Logic**: Map pin + single-line alert ("Nearby active wildfire"). If event date is old, display in grey.
      operationId: getEonetEventsRegional
      tags:
        - Natural Events
      parameters:
        - name: bbox
          in: query
          required: true
          schema:
            type: string
            pattern: '^-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*,-?\d+\.?\d*$'
          example: "26.5,38.0,28.0,39.0"
          description: Bounding box coordinates "minLon,minLat,maxLon,maxLat"
        - name: userLat
          in: query
          required: false
          schema:
            type: number
            format: float
          example: 38.5
          description: User's latitude for distance calculation
        - name: userLon
          in: query
          required: false
          schema:
            type: number
            format: float
          example: 27.0
          description: User's longitude for distance calculation
        - name: status
          in: query
          required: false
          schema:
            type: string
            enum: [open, closed]
            default: open
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved regional events with proximity data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EONETRegionalEventsResponse'

  /eonet/events/analysis:
    get:
      summary: Get events with trend analysis
      description: |
        Identify storm evolution (strengthening / weakening trend) over specific time period.
        
        **Use Case**: To enhance PoP (probability of precipitation) or wind risk commentary with "regional tropical system activity" context.
        
        **Presentation Logic**: Mini timeline (arrows showing kts increase/decrease) + label "Trend: strengthening / stable / weakening."
      operationId: getEonetEventsAnalysis
      tags:
        - Natural Events
      parameters:
        - name: category
          in: query
          required: true
          schema:
            type: string
            enum: [drought, dustHaze, earthquakes, floods, landslides, manmade, seaLakeIce, severeStorms, snow, tempExtremes, volcanoes, waterColor, wildfires]
          example: "severeStorms"
          description: Category ID for trend analysis
        - name: start
          in: query
          required: true
          schema:
            type: string
            format: date
            pattern: '^\d{4}-\d{2}-\d{2}$'
          example: "2025-09-28"
          description: Start date (YYYY-MM-DD format)
        - name: end
          in: query
          required: true
          schema:
            type: string
            format: date
            pattern: '^\d{4}-\d{2}-\d{2}$'
          example: "2025-10-04"
          description: End date (YYYY-MM-DD format)
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Successfully retrieved events with trend analysis
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EONETAnalysisEventsResponse'

  /health:
    get:
      summary: API health check
      description: Returns API status and NASA POWER API connectivity status
      operationId: healthCheck
      tags:
        - Health
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '503':
          description: API is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    WeatherDataResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            location:
              $ref: '#/components/schemas/Location'
            date:
              type: string
              format: date
              example: "2025-09-30"
            dataType:
              type: string
              enum: [historical, prediction]
              example: "historical"
            hourlyData:
              type: object
              additionalProperties:
                type: object
                additionalProperties:
                  type: number
              example:
                T2M:
                  "2025093000": 15.32
                  "2025093001": 15.14
            dailyAggregates:
              type: object
              additionalProperties:
                $ref: '#/components/schemas/DailyAggregate'
            metadata:
              $ref: '#/components/schemas/WeatherMetadata'
            predictionMethod:
              type: string
              example: "historical_average"
              description: Only present for predictions
            historicalYearsUsed:
              type: integer
              example: 20
              description: Only present for predictions
        requestTimestamp:
          type: string
          format: date-time
          example: "2025-10-04T12:00:00Z"
        processingTime:
          type: integer
          example: 245
          description: Processing time in milliseconds

    Location:
      type: object
      properties:
        latitude:
          type: number
          example: 41.0
        longitude:
          type: number
          example: 29.0
        elevation:
          type: number
          nullable: true
          example: 59.56

    DailyAggregate:
      type: object
      properties:
        min:
          type: number
          example: 14.95
        max:
          type: number
          example: 21.41
        mean:
          type: number
          example: 18.23
        units:
          type: string
          example: "C"
        confidence:
          type: string
          enum: [high, medium, low, very_low]
          example: "high"
          description: Only present for predictions
        standardDeviation:
          type: number
          example: 2.1
          description: Only present for predictions

    WeatherMetadata:
      type: object
      properties:
        source:
          type: string
          example: "NASA POWER API"
        version:
          type: string
          example: "v2.8.0"
        fillValue:
          type: number
          example: -999.0
        timeStandard:
          type: string
          example: "LST"

    ParametersResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            availableParameters:
              type: array
              items:
                type: string
              example: ["T2M", "RH2M", "WS10M", "WD10M", "PS", "ALLSKY_SFC_SW_DWN"]
            parameterDetails:
              type: object
              additionalProperties:
                type: object
                properties:
                  units:
                    type: string
                  longname:
                    type: string
              example:
                T2M:
                  units: "C"
                  longname: "Temperature at 2 Meters"
            defaultParameters:
              type: array
              items:
                type: string
              example: ["T2M", "RH2M", "WS10M", "WD10M", "PS", "ALLSKY_SFC_SW_DWN"]
            maxParametersPerRequest:
              type: integer
              example: 20
        requestTimestamp:
          type: string
          format: date-time

    DateRangeResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            location:
              $ref: '#/components/schemas/Location'
            historicalRange:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: "1981-01-01"
                endDate:
                  type: string
                  format: date
                  example: "2025-10-04"
            predictionRange:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: "2025-10-05"
                endDate:
                  type: string
                  format: date
                  example: "2035-10-04"
        requestTimestamp:
          type: string
          format: date-time

    BulkRequest:
      type: object
      properties:
        requests:
          type: array
          minItems: 1
          maxItems: 10
          items:
            type: object
            properties:
              latitude:
                type: number
                format: float
                minimum: -90
                maximum: 90
              longitude:
                type: number
                format: float
                minimum: -180
                maximum: 180
              date:
                type: string
                format: date
              parameters:
                type: string
                description: Optional comma-separated parameter list
            required: [latitude, longitude, date]
        historicalYears:
          type: integer
          minimum: 5
          maximum: 30
          default: 20
      required: [requests]
      example:
        requests:
          - latitude: 41.0
            longitude: 29.0
            date: "2025-10-15"
            parameters: "T2M,RH2M"
          - latitude: 40.7128
            longitude: -74.0060
            date: "2025-12-25"
        historicalYears: 20

    BulkResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            totalRequests:
              type: integer
              example: 2
            successfulRequests:
              type: integer
              example: 2
            failedRequests:
              type: integer
              example: 0
            results:
              type: array
              items:
                type: object
                description: Same structure as WeatherDataResponse.data
            errors:
              type: array
              items:
                type: object
                properties:
                  index:
                    type: integer
                    example: 1
                  error:
                    type: object
                    properties:
                      code:
                        type: string
                      message:
                        type: string
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    HealthResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        status:
          type: string
          example: "healthy"
        timestamp:
          type: string
          format: date-time
        version:
          type: string
          example: "1.0.0"
        services:
          type: object
          properties:
            api:
              type: object
              properties:
                status:
                  type: string
                  enum: [operational, degraded, down]
                responseTime:
                  type: integer
            nasaPowerApi:
              type: object
              properties:
                status:
                  type: string
                  enum: [operational, degraded, down]
                message:
                  type: string
                error:
                  type: string
                  nullable: true
        uptime:
          type: number
          description: Server uptime in seconds
        environment:
          type: string
          example: "development"

    GeomagneticStormResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NASA DONKI GST"
            dateRange:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: "2025-09-05"
                endDate:
                  type: string
                  format: date
                  example: "2025-10-05"
            storms:
              type: array
              items:
                $ref: '#/components/schemas/GeomagneticStorm'
            totalCount:
              type: integer
              example: 3
            statistics:
              type: object
              properties:
                maxKpIndex:
                  type: number
                  example: 7.33
                averageKpIndex:
                  type: number
                  example: 6.15
                totalKpObservations:
                  type: integer
                  example: 12
                stormsWithMultipleKp:
                  type: integer
                  example: 2
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer
          description: Processing time in milliseconds

    GeomagneticStorm:
      type: object
      properties:
        gstID:
          type: string
          example: "2025-09-30T03:00:00-GST-001"
        startTime:
          type: string
          format: date-time
          example: "2025-09-30T03:00:00Z"
        allKpIndex:
          type: array
          items:
            type: object
            properties:
              observedTime:
                type: string
                format: date-time
              kpIndex:
                type: number
                example: 7.33
              source:
                type: string
                example: "NOAA"
        linkedEvents:
          type: array
          items:
            type: object
            properties:
              activityID:
                type: string
                example: "2025-09-27T20:34:00-HSS-001"
        link:
          type: string
          example: "https://webtools.ccmc.gsfc.nasa.gov/DONKI/view/GST/41517/-1"
        submissionTime:
          type: string
          format: date-time
        versionId:
          type: integer
          example: 1
        sentNotifications:
          type: array
          items:
            type: object

    ThreeDayForecastResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NOAA SWPC 3-Day Geomagnetic Forecast"
            issued:
              type: string
              format: date-time
              example: "2025-10-05T00:30:00Z"
            forecasts:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                    example: "2025-10-05"
                  kpIndex:
                    type: number
                    example: 4
                  activityLevel:
                    type: string
                    example: "Active"
                  stormLevel:
                    type: string
                    nullable: true
                    example: "G1-Minor"
            summary:
              type: object
              properties:
                maxKp:
                  type: number
                  example: 4
                averageKp:
                  type: number
                  example: 3.33
                stormDays:
                  type: integer
                  example: 0
                activeDays:
                  type: integer
                  example: 1
                totalDays:
                  type: integer
                  example: 3
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    TwentySevenDayOutlookResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NOAA SWPC 27-Day Geomagnetic Outlook"
            issued:
              type: string
              format: date-time
            outlooks:
              type: array
              items:
                type: object
                properties:
                  date:
                    type: string
                    format: date
                  kpIndex:
                    type: number
                  description:
                    type: string
                    example: "Possible G1 Storm"
                  stormLevel:
                    type: string
                    nullable: true
                    example: "G1-Minor"
            summary:
              type: object
              properties:
                maxKp:
                  type: number
                averageKp:
                  type: number
                stormDays:
                  type: integer
                notableEvents:
                  type: integer
                totalDays:
                  type: integer
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    CombinedForecastResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            forecast3Day:
              type: object
              description: 3-day forecast data
            outlook27Day:
              type: object
              description: 27-day outlook data
            combinedSummary:
              type: object
              properties:
                totalForecastDays:
                  type: integer
                  example: 30
                nearTerm:
                  type: object
                  description: Summary from 3-day forecast
                extendedTerm:
                  type: object
                  description: Summary from 27-day outlook
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    AsteroidFeedResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NASA NeoWs API"
            dateRange:
              type: object
              properties:
                startDate:
                  type: string
                  format: date
                  example: "2025-09-07"
                endDate:
                  type: string
                  format: date
                  example: "2025-09-08"
            elementCount:
              type: integer
              example: 31
              description: Total number of asteroids in the response
            asteroidsByDate:
              type: object
              additionalProperties:
                type: array
                items:
                  $ref: '#/components/schemas/Asteroid'
            summary:
              $ref: '#/components/schemas/AsteroidSummary'
            pagination:
              type: object
              properties:
                next:
                  type: string
                  format: uri
                  nullable: true
                previous:
                  type: string
                  format: uri
                  nullable: true
                self:
                  type: string
                  format: uri
                  nullable: true
        requestTimestamp:
          type: string
          format: date-time
          example: "2025-10-05T12:00:00Z"
        processingTime:
          type: integer
          example: 456
          description: Processing time in milliseconds

    Asteroid:
      type: object
      properties:
        id:
          type: string
          example: "2523661"
          description: Unique identifier for the asteroid
        neoReferenceId:
          type: string
          example: "2523661"
          description: NASA's Near Earth Object reference identifier
        name:
          type: string
          example: "523661 (2012 LF11)"
          description: Common name of the asteroid (may include designation codes)
        nasaJplUrl:
          type: string
          format: uri
          example: "https://ssd.jpl.nasa.gov/tools/sbdb_lookup.html#/?sstr=2523661"
          description: URL to NASA JPL Small-Body Database for detailed information
        absoluteMagnitude:
          type: number
          format: float
          example: 20.79
          description: Absolute magnitude (H) - measure of asteroid's intrinsic brightness
        estimatedDiameter:
          type: object
          description: Estimated size of the asteroid in various units with minimum and maximum values
          properties:
            kilometers:
              type: object
              properties:
                min:
                  type: number
                  format: float
                  example: 0.1847374636
                max:
                  type: number
                  format: float
                  example: 0.4130855266
            meters:
              type: object
              properties:
                min:
                  type: number
                  format: float
                  example: 184.7374636151
                max:
                  type: number
                  format: float
                  example: 413.0855266343
            miles:
              type: object
              properties:
                min:
                  type: number
                  format: float
                  example: 0.1147905025
                max:
                  type: number
                  format: float
                  example: 0.2566793668
            feet:
              type: object
              properties:
                min:
                  type: number
                  format: float
                  example: 606.094060127
                max:
                  type: number
                  format: float
                  example: 1355.2675192028
        isPotentiallyHazardous:
          type: boolean
          example: false
          description: Boolean indicating if the asteroid is classified as potentially hazardous (based on size and orbit)
        closeApproachData:
          type: object
          description: Information about the asteroid's close approach to Earth
          properties:
            date:
              type: string
              format: date
              example: "2025-09-07"
              description: Date of closest approach (YYYY-MM-DD format)
            dateFull:
              type: string
              example: "2025-Sep-07 01:42"
              description: Full date and time of closest approach
            epochDate:
              type: integer
              format: int64
              example: 1757209320000
              description: Unix timestamp (milliseconds) of closest approach
            relativeVelocity:
              type: object
              description: Speed of asteroid relative to Earth in multiple units
              properties:
                kilometersPerSecond:
                  type: number
                  format: float
                  example: 25.9665380231
                  description: Velocity in km/s
                kilometersPerHour:
                  type: number
                  format: float
                  example: 93479.5368830909
                  description: Velocity in km/h
                milesPerHour:
                  type: number
                  format: float
                  example: 58084.5489038294
                  description: Velocity in mph
            missDistance:
              type: object
              description: Distance by which the asteroid will miss Earth
              properties:
                astronomical:
                  type: number
                  format: float
                  example: 0.3976014378
                  description: Distance in Astronomical Units (AU)
                lunar:
                  type: number
                  format: float
                  example: 154.6669593042
                  description: Distance in Lunar Distances (LD, distance from Earth to Moon)
                kilometers:
                  type: number
                  format: float
                  example: 59480328.203817486
                  description: Distance in kilometers
                miles:
                  type: number
                  format: float
                  example: 36959362.1174578668
                  description: Distance in miles
            orbitingBody:
              type: string
              example: "Earth"
              description: The celestial body being orbited (typically "Earth")
        isSentryObject:
          type: boolean
          example: false
          description: Boolean indicating if the asteroid is on NASA's Sentry risk table (potential future Earth impact)

    AsteroidSummary:
      type: object
      properties:
        totalAsteroids:
          type: integer
          example: 31
        potentiallyHazardous:
          type: integer
          example: 2
        sentryObjects:
          type: integer
          example: 1
        closestApproach:
          type: object
          nullable: true
          properties:
            asteroidId:
              type: string
              example: "54545419"
            name:
              type: string
              example: "(2025 RF4)"
            distance:
              type: object
              properties:
                kilometers:
                  type: number
                  example: 2344252.941886597
                miles:
                  type: number
                  example: 1456651.2322731586
            date:
              type: string
              format: date
              example: "2025-09-07"
        largestAsteroid:
          type: object
          nullable: true
          properties:
            asteroidId:
              type: string
            name:
              type: string
            diameter:
              type: object
              properties:
                kilometersMax:
                  type: number
                milesMax:
                  type: number
        fastestAsteroid:
          type: object
          nullable: true
          properties:
            asteroidId:
              type: string
            name:
              type: string
            velocity:
              type: object
              properties:
                kilometersPerHour:
                  type: number
                milesPerHour:
                  type: number

    AsteroidErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "INVALID_DATE_FORMAT"
            message:
              type: string
              example: "Invalid date format provided"
            details:
              type: object
              properties:
                field:
                  type: string
                  example: "start_date"
                provided:
                  type: string
                  example: "2025/09/07"
                expected:
                  type: string
                  example: "YYYY-MM-DD"
        requestTimestamp:
          type: string
          format: date-time

    EONETCategory:
      type: object
      properties:
        id:
          type: string
          example: "wildfires"
          description: Category identifier
        title:
          type: string
          example: "Wildfires"
          description: Human-readable category name
        description:
          type: string
          example: "Wildland fires includes all nature of fire, in forest and plains, as well as those that spread to become urban and industrial fire events. Fires may be naturally caused or manmade."
          description: Detailed description of what events this category includes
        link:
          type: string
          format: uri
          example: "https://eonet.gsfc.nasa.gov/api/v3/categories/wildfires"
          description: URL to category-specific endpoint
        layersUrl:
          type: string
          format: uri
          example: "https://eonet.gsfc.nasa.gov/api/v3/layers/wildfires"
          description: URL to associated map layers for visualization

    EONETEvent:
      type: object
      properties:
        id:
          type: string
          example: "EONET_15683"
          description: Unique identifier for the event
        title:
          type: string
          example: "Tropical Cyclone 02A"
          description: Title/name of the event
        description:
          type: string
          nullable: true
          example: "6 Miles N from Ketchum, ID"
          description: Additional description or location details (may be null)
        link:
          type: string
          format: uri
          example: "https://eonet.gsfc.nasa.gov/api/v3/events/EONET_15683"
          description: Direct link to the specific event in EONET API
        status:
          type: string
          enum: [open, closed]
          example: "open"
        closedDate:
          type: string
          format: date-time
          nullable: true
          description: Date when the event was closed/ended (null if still open)
        categories:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "severeStorms"
              title:
                type: string
                example: "Severe Storms"
        sources:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "JTWC"
              url:
                type: string
                format: uri
        geometry:
          type: array
          items:
            type: object
            properties:
              date:
                type: string
                format: date-time
              type:
                type: string
                example: "Point"
              coordinates:
                type: object
                properties:
                  longitude:
                    type: number
                  latitude:
                    type: number
              magnitude:
                type: object
                properties:
                  value:
                    type: number
                    nullable: true
                  unit:
                    type: string
                    nullable: true
        currentMagnitude:
          type: object
          properties:
            value:
              type: number
              nullable: true
            unit:
              type: string
              nullable: true
            label:
              type: string
        lastUpdate:
          type: string
          format: date-time
        isStaleData:
          type: boolean

    EONETEventsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NASA EONET API"
            filters:
              type: object
              properties:
                status:
                  type: string
                  example: "open"
                limit:
                  type: integer
                  example: 5
            totalEvents:
              type: integer
              example: 2
            events:
              type: array
              items:
                $ref: '#/components/schemas/EONETEvent'
            summary:
              type: object
              properties:
                totalEvents:
                  type: integer
                byCategory:
                  type: object
                  additionalProperties:
                    type: integer
                averageMagnitude:
                  type: object
                  additionalProperties:
                    type: number
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    EONETRegionalEventsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NASA EONET API"
            region:
              type: object
              properties:
                bbox:
                  type: object
                  properties:
                    minLongitude:
                      type: number
                    minLatitude:
                      type: number
                    maxLongitude:
                      type: number
                    maxLatitude:
                      type: number
                userLocation:
                  type: object
                  properties:
                    latitude:
                      type: number
                    longitude:
                      type: number
            totalEvents:
              type: integer
            events:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/EONETEvent'
                  - type: object
                    properties:
                      location:
                        type: object
                        properties:
                          longitude:
                            type: number
                          latitude:
                            type: number
                      proximityToUser:
                        type: object
                        properties:
                          distanceKm:
                            type: number
                          distanceMiles:
                            type: number
                          riskLevel:
                            type: string
                            enum: [HIGH, MEDIUM, LOW]
                          riskDescription:
                            type: string
                          alert:
                            type: string
            summary:
              type: object
              properties:
                byRiskLevel:
                  type: object
                  properties:
                    high:
                      type: integer
                    medium:
                      type: integer
                    low:
                      type: integer
                nearestEvent:
                  type: object
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    distanceKm:
                      type: number
                    riskLevel:
                      type: string
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    EONETAnalysisEventsResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          properties:
            source:
              type: string
              example: "NASA EONET API"
            category:
              type: object
              properties:
                id:
                  type: string
                title:
                  type: string
            dateRange:
              type: object
              properties:
                start:
                  type: string
                  format: date
                end:
                  type: string
                  format: date
            totalEvents:
              type: integer
            events:
              type: array
              items:
                type: object
                allOf:
                  - $ref: '#/components/schemas/EONETEvent'
                  - type: object
                    properties:
                      timeline:
                        type: array
                        items:
                          type: object
                          properties:
                            date:
                              type: string
                              format: date-time
                            coordinates:
                              type: object
                              properties:
                                longitude:
                                  type: number
                                latitude:
                                  type: number
                            magnitude:
                              type: object
                              properties:
                                value:
                                  type: number
                                unit:
                                  type: string
                      trendAnalysis:
                        type: object
                        properties:
                          trend:
                            type: string
                            enum: [strengthening, weakening, stable]
                          trendLabel:
                            type: string
                          magnitudeChange:
                            type: object
                            properties:
                              initial:
                                type: number
                              peak:
                                type: number
                              final:
                                type: number
                              totalIncrease:
                                type: number
                              percentageChange:
                                type: number
                          timelineArrows:
                            type: array
                            items:
                              type: object
                              properties:
                                from:
                                  type: string
                                  format: date-time
                                to:
                                  type: string
                                  format: date-time
                                direction:
                                  type: string
                                change:
                                  type: string
                          averageChangePerInterval:
                            type: number
                          isIntensifying:
                            type: boolean
            summary:
              type: object
              properties:
                trendDistribution:
                  type: object
                  properties:
                    strengthening:
                      type: integer
                    weakening:
                      type: integer
                    stable:
                      type: integer
                averagePeakMagnitude:
                  type: number
                dateRangeCoverage:
                  type: string
        requestTimestamp:
          type: string
          format: date-time
        processingTime:
          type: integer

    EONETErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "INVALID_CATEGORY"
            message:
              type: string
              example: "Invalid category ID provided"
            details:
              type: object
        requestTimestamp:
          type: string
          format: date-time

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            message:
              type: string
              example: "Invalid input parameters"
            details:
              oneOf:
                - type: array
                  items:
                    type: object
                    properties:
                      field:
                        type: string
                        example: "latitude"
                      message:
                        type: string
                        example: "Latitude must be between -90 and 90"
                      provided:
                        example: "95.0"
                - type: object
        requestTimestamp:
          type: string
          format: date-time
